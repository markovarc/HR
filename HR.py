import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, BotCommand
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import asyncio

BOT_TOKEN = '7618565108:AAEBvrce0xRPTKyB4tmW1mG0kvR_acbnX-k'
SUPER_GROUP_ID = -1002649813309

logging.basicConfig(level=logging.INFO)

user_states = {}
user_answers = {}
user_thread_map = {}
autoreset_tasks = {}
total_steps = 4

questions = {
    1: "üßæ –û—Ç–ª–∏—á–Ω–æ! –†–∞—Å—Å–∫–∞–∂–∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ.\n–ß—Ç–æ —Ç—ã –∏—â–µ—à—å? –ß–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è? –ö–∞–∫–∏–µ —Ü–µ–ª–∏ —Å—Ç–∞–≤–∏—à—å?"
}

def keyboard_next(step):
    return ReplyKeyboardMarkup([
        [KeyboardButton(f"‚û°Ô∏è –î–∞–ª—å—à–µ (—à–∞–≥ {step}/{total_steps})")],
        [KeyboardButton("üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞")]
    ], resize_keyboard=True)

def keyboard_cancel():
    return ReplyKeyboardMarkup([[KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")]], resize_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    user_id = user.id
    user_states[user_id] = 1
    user_answers[user_id] = {}
    if autoreset_tasks.get(user_id):
        autoreset_tasks[user_id].cancel()
    task = asyncio.create_task(auto_reset_form(context, user_id, delay=600))
    autoreset_tasks[user_id] = task
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤ –∫–æ–º–ø–∞–Ω–∏–∏ *¬´HR modern¬ª*!\n\n"
        "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –Ω–∞—Å –±–æ–ª—å—à–µ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
        reply_markup=keyboard_next(1),
        parse_mode="Markdown"
    )

async def auto_reset_form(context, user_id, delay=600):
    try:
        await asyncio.sleep(delay)
        if user_states.get(user_id) and user_states[user_id] < total_steps:
            await context.bot.send_message(
                chat_id=user_id,
                text="‚åõÔ∏è –ü–æ—Ö–æ–∂–µ, –≤—ã –Ω–µ –¥–æ—à–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞. –ú—ã —Å–±—Ä–æ—Å–∏–ª–∏ –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å.\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ."
            )
            user_states.pop(user_id, None)
            user_answers.pop(user_id, None)
    except asyncio.CancelledError:
        pass

async def show_step_content(update: Update, context: ContextTypes.DEFAULT_TYPE, step: int):
    user = update.effective_user
    if step == 1:
        await update.message.reply_text(questions[1], reply_markup=ReplyKeyboardRemove())
    elif step == 2:
        await update.message.reply_text(
            "üëã *–ü—Ä–∏–≤–µ—Ç, –±—É–¥—É—â–∏–π –ø–∞—Ä—Ç–Ω—ë—Ä!* ü§ù\n\n"
            "*–û –Ω–∞—Å:*\n"
            "–ú—ã ‚Äî –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞—Å—à–∏—Ä—è—é—â–µ–µ—Å—è —Ä–µ–∫—Ä—É—Ç–∏–Ω–≥–æ–≤–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –º–æ–ª–æ–¥—ã—Ö –∏ –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã—Ö –ø–∞—Ä—Ç–Ω—ë—Ä–∞—Ö!\n"
            "–ï—Å–ª–∏ –≤—ã –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ–≥–∞—Ç—å –ª—é–¥—è–º –Ω–∞—Ö–æ–¥–∏—Ç—å —Ö–æ—Ä–æ—à—É—é —Ä–∞–±–æ—Ç—É (–∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å üí∏) ‚Äî –ø–æ–µ—Ö–∞–ª–∏!",
            parse_mode="Markdown"
        )
    elif step == 3:
        await update.message.reply_text(
            "üíº *–û –ø—Ä–æ—Ü–µ—Å—Å–µ:*\n\n"
            "–í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –∏—Å–∫–∞—Ç—å –∏ –ø—Ä–∏–≤–æ–¥–∏—Ç—å –Ω–æ–≤—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤ –≤ –Ø.–ï–¥–∞.\n"
            "‚ö†Ô∏è –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–Ω–æ—Å–∏—Ç–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü—É. –ï—Å–ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –Ω–µ –±—É–¥–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ, –º—ã –Ω–µ —Å–º–æ–∂–µ–º –æ—Ç—Å–ª–µ–¥–∏—Ç—å, –≤–∞—à –ª–∏ —ç—Ç–æ –∫–∞–Ω–¥–∏–¥–∞—Ç –∏ –æ–ø–ª–∞—Ç—ã –Ω–µ –±—É–¥–µ—Ç!\n\n"
            "üí∞ –û–ø–ª–∞—Ç–∞: 600‚ÇΩ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫—É—Ä—å–µ—Ä–∞ –∏ 5 –∑–∞–∫–∞–∑–æ–≤ + 100‚ÇΩ –∑–∞ –∫–∞–∂–¥—ã–π —Å–ª–µ–¥—É—é—â–∏–π (–¥–æ 100).",
            parse_mode="Markdown"
        )
    elif step == 4:
        await update.message.reply_text(
       "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã —Å –Ω–∞–º–∏:\n"
        "1. –ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ üïí. –í—ã –º–æ–∂–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –≤–∞—Å –≤—Ä–µ–º—è –∏ —Å–æ–≤–º–µ—â–∞—Ç—å —ç—Ç—É –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å –¥—Ä—É–≥–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏, –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–∞–±–æ—Ç–æ–π –∏–ª–∏ —É—á—ë–±–æ–π.\n"
        "2. –ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–ø–ª–∞—Ç—ã üí∏. –í—ã —Ç–æ—á–Ω–æ –±—É–¥–µ—Ç–µ –∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç–µ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≤–ª–µ—á—ë–Ω–Ω–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞, –∏ —Å–º–æ–∂–µ—Ç–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –¥–æ—Ö–æ–¥. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —á–µ–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ \"–ú–æ–π –Ω–∞–ª–æ–≥\" –¥–ª—è —Å–∞–º–æ–∑–∞–Ω—è—Ç—ã—Ö, –º—ã –±—É–¥–µ–º –∏—Ö –æ–ø–ª–∞—á–∏–≤–∞—Ç—å.\n"
        "3. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –æ–±—É—á–µ–Ω–∏–µ üéì. –ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –æ–ø—ã—Ç–∞ –≤ —Ä–µ–∫—Ä—É—Ç–∏–Ω–≥–µ, –º—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –∏ –¥–∞–¥–∏–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–Ω–∞–Ω–∏—è –∏ –Ω–∞–≤—ã–∫–∏.\n"
        "4. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å üí∞. –ü—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ–¥—Ö–æ–¥–µ –∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ö–æ—Ä–æ—à–∏–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥.\n"
        "5. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –±–∞–∑—É –¥–ª—è –ø–æ–∏—Å–∫–∞ üìä. –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –º—ã –±—É–¥–µ–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–µ–¥–∞–≤–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ä–µ–∑—é–º–µ —Å job-—Å–∞–π—Ç–∞ –≤ —Ö–æ—Ä–æ—à–æ –æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö.\n"
               "–ß—Ç–æ –º—ã –æ–∂–∏–¥–∞–µ–º –æ—Ç –≤–∞—Å:\n"
        "1. –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å ‚ö°. –ù–∞–º –Ω—É–∂–Ω—ã –ø–∞—Ä—Ç–Ω—ë—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≥–æ—Ç–æ–≤—ã —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∏—Å–∫–∞—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –∏ –ø—Ä–∏–º–µ–Ω—è—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è.\n"
        "2. –û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å ‚úÖ. –í–∞–∂–Ω–æ –≤–Ω–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞–º –≤ —Ç–∞–±–ª–∏—Ü—É, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞—à–µ–π —Ä–∞–±–æ—Ç—ã.\n"
        "3. –ö–æ–º–º—É–Ω–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å üó£Ô∏è. –£–º–µ–Ω–∏–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –æ–±—â–∏–π —è–∑—ã–∫ —Å –ª—é–¥—å–º–∏ –∏ —É–±–µ–∂–¥–∞—Ç—å –∏—Ö ‚Äî –≤–∞–∂–Ω—ã–π –Ω–∞–≤—ã–∫ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ —Ä–µ–∫—Ä—É—Ç–µ—Ä–∞.\n"
, reply_markup=keyboard_next(4))
    elif step == 5:
        await finish_application(update, context)
        return
    if step < total_steps:
        await update.message.reply_text(
            f"–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É *¬´–î–∞–ª—å—à–µ¬ª* –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.",
            reply_markup=keyboard_next(step),
            parse_mode="Markdown"
        )

async def handle_reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    text = update.message.text
    user_id = user.id
    step = user_states.get(user_id, 1)
    if text.startswith("‚û°Ô∏è –î–∞–ª—å—à–µ"):
        user_states[user_id] = step + 1
        await show_step_content(update, context, user_states[user_id])
    elif text == "üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞":
        await update.message.reply_text(
            "‚ùå –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.",
            reply_markup=ReplyKeyboardRemove()
        )
        user_states.pop(user_id, None)
        user_answers.pop(user_id, None)
    elif text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        thread_id = user_thread_map.get(user_id)
        if thread_id:
            await context.bot.edit_forum_topic(
                chat_id=SUPER_GROUP_ID,
                message_thread_id=thread_id,
                name=f"‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç @{user.username or user.first_name}"
            )
        await update.message.reply_text("üö´ –ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=ReplyKeyboardRemove())
    else:
        if step == 1:
            user_answers.setdefault(user_id, {})[step] = text
            await update.message.reply_text("‚úÖ –û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω.", reply_markup=keyboard_next(step))

async def finish_application(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    user_id = user.id
    thread_title = f"‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç @{user.username or user.first_name}"
    topic = await context.bot.create_forum_topic(chat_id=SUPER_GROUP_ID, name=thread_title)
    user_thread_map[user_id] = topic.message_thread_id
    answers = user_answers.get(user_id, {})
    lines = [f"üì® –ê–Ω–∫–µ—Ç–∞ –æ—Ç @{user.username or user.first_name} (ID: {user.id})"]
    for idx, answer in answers.items():
        lines.append(f"\nüßæ –û—Ç–≤–µ—Ç {idx}:\nüí¨ {answer}")
    await context.bot.send_message(
        chat_id=SUPER_GROUP_ID,
        message_thread_id=topic.message_thread_id,
        text="\n".join(lines)
    )
    task = autoreset_tasks.pop(user_id, None)
    if task:
        task.cancel()
    await update.message.reply_text(
        "–ï—Å–ª–∏ –≤—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–∏–Ω—è—Ç—å –≤—ã–∑–æ–≤ –∏ —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞, –∂–¥—ë–º –≤–∞—Å –≤ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ! üí™! \n"
        "–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.",
        reply_markup=keyboard_cancel()
    )

async def handle_link_from_moderator(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message.is_topic_message:
        return
    thread_id = update.message.message_thread_id
    user_id = next((uid for uid, tid in user_thread_map.items() if tid == thread_id), None)
    if user_id:
        await context.bot.send_message(
            chat_id=user_id,
            text=f"üì¨ –°—Å—ã–ª–∫–∞ –æ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:\nüëâ {update.message.text}"
        )

async def handle_unstructured_client_msg(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    user_id = user.id
    if user_id in user_thread_map:
        thread_id = user_thread_map[user_id]
        if update.message.text:
            await context.bot.send_message(
                chat_id=SUPER_GROUP_ID,
                message_thread_id=thread_id,
                text=f"üë§ {user.first_name}: {update.message.text}"
            )
        elif update.message.voice:
            await context.bot.send_voice(
                chat_id=SUPER_GROUP_ID,
                message_thread_id=thread_id,
                voice=update.message.voice.file_id
            )
        elif update.message.photo:
            await context.bot.send_photo(
                chat_id=SUPER_GROUP_ID,
                message_thread_id=thread_id,
                photo=update.message.photo[-1].file_id
            )
        elif update.message.document:
            await context.bot.send_document(
                chat_id=SUPER_GROUP_ID,
                message_thread_id=thread_id,
                document=update.message.document.file_id
            )
        else:
            await update.message.reply_text("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É.")
    else:
        await update.message.reply_text(
            "üôè –°–ø–∞—Å–∏–±–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≤–µ—Ä—à–∏—Ç–µ –±–µ—Å–µ–¥—É –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ."
        )

async def faq(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üìå –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n"
        "‚Ä¢ üí∞ –û–ø–ª–∞—Ç–∞: 600‚ÇΩ –∑–∞ 5 –∑–∞–∫–∞–∑–æ–≤ + 100‚ÇΩ –∑–∞ –∫–∞–∂–¥—ã–π —Å–ª–µ–¥—É—é—â–∏–π (–¥–æ 100).\n"
        "‚Ä¢ üìä –í–Ω–æ—Å–∏—Ç–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü—É.\n"
        "‚Ä¢ ü§ù –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª—é–±—ã–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤.",
        parse_mode="Markdown"
    )

async def setup_bot_menu(app):
    await app.bot.set_my_commands([
        BotCommand("start", "üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        BotCommand("faq", "üìÑ –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
    ])

app = ApplicationBuilder().token(BOT_TOKEN).build()

app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("faq", faq))
app.add_handler(MessageHandler(filters.ChatType.PRIVATE & filters.TEXT, handle_reply))
app.add_handler(MessageHandler(filters.ChatType.GROUPS & filters.TEXT, handle_link_from_moderator))
app.add_handler(MessageHandler(filters.ChatType.PRIVATE, handle_unstructured_client_msg))
app.post_init = setup_bot_menu

app.run_polling()
